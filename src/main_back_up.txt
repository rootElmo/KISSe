#include <Arduino.h>
#include <Encoder.h>
#include <Bounce2.h>

// KISSE

#define ENC_BUTTON 19
#define BUTTON_1 18

Encoder dataEnc(21, 20);

Bounce db = Bounce();

int counter;
bool btnState = false;
bool btnPrevState = false;
long printValue;
long oldPos = -999;
struct stepValue {
    unsigned int note; // Note pitch
    bool gate; // True -> gate on; False -> gate off
    bool noteActive; // True -> write note value to dac; False -> don't write note value to dac
};

void setup() {
    Serial.begin(9600);
    Serial.println("Basic encoder test:");
    pinMode(ENC_BUTTON, INPUT);
    digitalWrite(ENC_BUTTON, HIGH);

    db.attach(ENC_BUTTON);
    db.interval(1);

    printValue = 0;
    counter = 0;
}

/*

void readEnc() {
    long newPos = dataEnc.read();
    if (newPos == oldPos) {
        return;
    } else if (newPos >= oldPos) {
        oldPos = newPos;
        counter++;
    } else if (newPos <= oldPos) {
        oldPos = newPos;
        counter--;
    }
    if (counter >= 4) {
        counter = 0;
        printValue++;
        Serial.print("Print value = ");
        Serial.println(printValue);
    } else if (counter <= -4) {
        counter = 0;
        printValue --;
        Serial.print("Print value = ");
        Serial.println(printValue);
    } else {
        return;
    }
}

*/

/*

void readBtn() { // READ ENCODER BTN
    db.update(); 
    if (db.read() == HIGH) {
        btnState = false;
        if (btnPrevState == btnState) {
            return; 
        } else if (btnPrevState != btnState) {
            btnPrevState = btnState;
            Serial.println("Button off");  
        }
    } else if (db.read() == LOW) {
        btnState = true;
        if (btnPrevState == btnState) {
            return; 
        } else if (btnPrevState != btnState) {
            btnPrevState = btnState;
            Serial.println("Button on");
        }
    }
}

*/

void loop() {

}


